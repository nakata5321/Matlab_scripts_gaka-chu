function [fitresult, gof] = createFit1(x, y, z)
%CREATEFIT1(X,Y,Z)
%  Create a fit.
%
%  Data for 'fit1' fit:
%      X Input : x
%      Y Input : y
%      Z Output: z
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 07-Dec-2020 11:34:08


%% Fit: 'fit1'.
% x = [1036.02 1005.27 897.01 734.49 734.99 597.72 814.25 685.51 686.43 855.37 780.74 1054.42]/1000
% y = [-247.68 -266.58 -288.11 -292.97 -71.27 95.86 -207.4 -208.84 -304.64 -301.09 -120.14 -124.04]/1000
% z = [320.17 321.03 317.9 307.89 304.3 269.66 314.1 298.68 303.04 311.43 303.99 330.07]/1000

x = [950.79 950.75 884.32 756.91 707.28 672.76 948.31 997.42 908.68 812.14 812.1 934.41 825.88 733.53 650.99 642.35 729.15 638.86 778.24]/1000;
y = [-0.87 -172.49 -132.21 -324.32 -179.21 112.21 118.83 145.38 47.36 94.77 -108.73 -232.84 -233 -153.63 -68.38 4.92 75.91 151.99 177.47]/1000;
z = [238.19 238.2 238.69 241.94 242.16 245.3 239.59 239.33 239.6 240.57 241.41 240.04 240.84 241.91 244.72 244.81 242.5 245.44 244.23]/1000;

[xData, yData, zData] = prepareSurfaceData( x, y, z );

% Set up fittype and options.
ft = fittype( 'poly11' );
opts = fitoptions( 'Method', 'LinearLeastSquares' );
opts.Normalize = 'on';
opts.Robust = 'LAR';

% Fit model to data.
[fitresult, gof] = fit( [xData, yData], zData, ft, opts );

% Plot fit with data.
figure( 'Name', 'fit1' );
h = plot( fitresult, [xData, yData], zData );
legend( h, 'fit1', 'z vs. x, y', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 'x', 'Interpreter', 'none' );
ylabel( 'y', 'Interpreter', 'none' );
zlabel( 'z', 'Interpreter', 'none' );
grid on
view( -21.5, 27.9 );


